
<script>
var sortAscending = true;
var childRows = [], hiddenRows = [];
    $(function () {
      $("[data-toggle='tooltip']").tooltip();
      setupSortableColumns();
      $("#scoresTable").tablesorter();
      setButtonText();

      $("#sortColumnsButton").click(function() {
        if (sortAscending) {
          sortColumnsAscending();
        } else {
          sortColumnsDescending();
        }

        sortAscending = !sortAscending;
        setButtonText();
      });
    });

function setButtonText() {
  if (sortAscending) {
    $("#sortColumnsButton").html("Sort review totals in ascending order");
  } else {
    $("#sortColumnsButton").html("Sort review totals in descending order");
  }
}

function transposeScoresTable() {
  storeChildRows();
  $("#scoresTable").trigger("destroy");
    var table = $('#scoresTable');
    table.find('thead tr').detach().prependTo( table.find('tbody') );
    var t = table.find('tbody').eq(0);
    var r = t.find('tr');
    var cols= r.length;
    var rows= r.eq(0).find('td,th').length;
    var cell, next, tem, i = 0;
    var tb= $('<tbody></tbody>');

    while(i<rows){
        cell= 0;
        tem= $('<tr></tr>');
        while(cell<cols){
            next= r.eq(cell++).find('td,th').eq(0);
            tem.append(next);
        }
        tb.append(tem);
        ++i;
    }
    table.find('tbody').remove();
    $(tb).appendTo(table);
    $(table)
        .find('tbody tr:eq(0)')
        .detach()
        .appendTo( table.find('thead') )
        .children()
        .each(function(){
            $(this).replaceWith('<th scope="col">'+$(this).html()+'</th>');
        });
    $(table)
        .find('tbody tr th:first-child')
        .each(function(){
            $(this).replaceWith('<td scope="row">'+$(this).html()+'</td>');
        });
    table.show();
}

function setupSortableColumns() {
  var tableHeaders = $("#scoresTable>thead>tr>th");
  tableHeaders.each(function(index) {

    if ($(this).text().trim() === "Criterion" || $(this).text().trim() === "Avg") {
      if (!$(this).hasClass("sorter-true")) {
        $(this).addClass("sorter-true");
      }
    } else {
      if (!$(this).hasClass("sorter-false")) {
        $(this).addClass("sorter-false");
      }
    }
  });
}

function storeChildRows() {
  $("#scoresTable>tbody>tr").each(function() {
    if ($(this).hasClass("tablesorter-childRow")) {
      childRows.push($(this));
      $(this).remove();
    }
  });
}

function restoreChildRows() {
  $("#scoresTable>tbody>tr").each(function(index, value) {
    $(this).after(childRows[index]);
  });

  childRows = [];
}

function setupTBodies() {
  $("#scoresTable>tbody>tr").unwrap();
  $("#scoresTable>tr:eq(0)").wrap("<tbody class='tablesorter-infoOnly'></tbody>");

  var numRemainingRows = $("#scoresTable>tr").size();
  $("#scoresTable>tr").slice(0, numRemainingRows - 2).wrapAll("<tbody></tbody>");
  $("#scoresTable>tr").wrapAll("<tbody class='tablesorter-infoOnly'></tbody>");
  $("#scoresTable").trigger('updateAll', true);
}

function undoTBodies() {
  $("#scoresTable>tbody:eq(0)>tr").unwrap();
  $("#scoresTable>tbody:eq(0)>tr").unwrap();
  $("#scoresTable>tbody:eq(0)>tr").unwrap();
  $("#scoresTable>tr").wrapAll("<tbody></tbody>");
}

function sortTotalsAscending() {
  var colNum = $("#scoresTable>thead>tr>th").size();
  var sorting = [[colNum-1,0]];
  $("#scoresTable").trigger("sorton",[sorting]);
}

function sortTotalsDescending() {
  var colNum = $("#scoresTable>thead>tr>th").size();
  var sorting = [[colNum-1,1]];
  $("#scoresTable").trigger("sorton",[sorting]);
}

function addTotalsRow() {
  //First, we need to add the "rowDataSd" class to the first cell in every row
  var numRows = $("#scoresTable>tbody>tr").length;

  // for (var i = 0; i < numRows; i++) {
  //   $("#scoresTable>tbody>tr:eq(" + i + ")>td:first").addClass("rowDataSd");
  // }

  var numCols = $("#scoresTable>tbody>tr:first>td").length;

  //There are two left columns and two right columns which don't need a totals cell
  var leftStart = 2, rightStart = 2;

  $("#scoresTable>tbody>tr:last").after("<tr class='totalColumn'></tr>")
  $("#scoresTable>tbody>tr:last").append("<td>TOTALS</td>");

  for (var i = 1; i < numCols; i++) {
    if (i >= leftStart && i < numCols - rightStart) {
      $("#scoresTable>tbody>tr:last").append("<td class='totalCol'></td>");
    } else {
      $("#scoresTable>tbody>tr:last").append("<td></td>");
    }
  }

  for (i=1;i<$('#scoresTable>tbody>tr:eq(0)>td').length;i++) {
    if (i >= leftStart && i < numCols - rightStart) {
      var total = 0;
      $("#scoresTable>tbody>tr>td:nth-child(" + (i+1) + ")").each(function() {
        if ($(this).hasClass("rowDataSd")) {
          total = total + parseInt($(this).text());
        }
      });

        $('#scoresTable>tbody>tr:last>td').eq(i).text(total);
      }
    }
}

function removeTotalsRow() {
  $("#scoresTable>tbody>tr").each(function(index) {
    if($(this).find("td>div").html() === "TOTALS") {
      $(this).remove();
    }
  });
}

function sortColumnsAscending() {
  addTotalsRow();
  storeHiddenRows();
  transposeScoresTable();
  $("#scoresTable").tablesorter();
  setupTBodies();
  sortTotalsAscending();
  undoTBodies();
  transposeScoresTable();
  setupSortableColumns();
  restoreChildRows();
  restoreHiddenRows();
  removeTotalsRow();
  $("#scoresTable").tablesorter();
  // $("[data-toggle='tooltip']").tooltip();
  // $(".collapse").collapse();
}

function sortColumnsDescending() {
  addTotalsRow();
  storeHiddenRows();
  transposeScoresTable();
  $("#scoresTable").tablesorter();
  setupTBodies();
  sortTotalsDescending();
  undoTBodies();
  transposeScoresTable();
  setupSortableColumns();
  restoreChildRows();
  restoreHiddenRows();
  removeTotalsRow();
  $("#scoresTable").tablesorter();
  // $("[data-toggle='tooltip']").tooltip();
  // $(".collapse").collapse();
}

function storeHiddenRows() {
  $("#scoresTable>tbody>tr").each(function() {
    if (!($(this).hasClass("tablesorter-hasChildRow") || $(this).hasClass("tablesorter-childRow") || $(this).hasClass("totalColumn"))) {
      hiddenRows.push($(this));
      $(this).remove();
    }
  });
}

function restoreHiddenRows() {
  for (var i = 0; i < hiddenRows.length; i++) {
    $("#scoresTable>tbody").append(hiddenRows[i]);
  }

  hiddenRows = [];
}

</script>

<h1>Summary Report for assignment: <%= @assignment.name %></h1>
<h4>Team: <%= @team.name %></h4>

<!-- For each of the models in the list, generate a heatgrid table. this is the outer most loop -->

<% @vmlist.each do |vm| %>

    <% if (vm.questionnaire_display_type == "Metareview" or vm.questionnaire_display_type == "Author Feedback" or vm.questionnaire_display_type == "Teammate Review") and @current_role_name.eql?'Student' %>
    <% else %>
        <% if vm.list_of_reviewers.length > 0 %>

          <!-- display the list of questions for this questionnaire -->
          <div id="hid<%= vm.questionnaire_type + vm.round.to_s %>" class="accordion-body collapse" >
            <table class="tbl_questlist" >
              <thead>
              <th>#</th>
              <th>Question</th>
              </thead>
              <% count = 0 %>
              <% vm.list_of_rows.each do |row| %>
                  <% if row.score_row.count > 0  %>
                      <tr style="background-color: #ffffff;">
                        <td><%= count += 1 %></td>
                        <td><%= row.questionText %></td>
                      </tr>
                  <% end %>
              <% end %>
            </table>
          </div>

          <!-- display the table title and tooltips -->
          <span style="width:100%;">
              <h4 style="font-weight:bold;display:inline-block;"><%= vm.questionnaire_display_type %>
                <% if vm.questionnaire_type == "ReviewQuestionnaire" %>
                    (Round: <%= vm.round.to_s  %> of <%= vm.rounds.to_s  %>)
                <%end %>
              </h4>
              <button type="button" id="sortColumnsButton"></button>
              <span class="spn_qsttog" data-toggle="collapse" class="accordion-toggle" data-target="#hid<%= vm.questionnaire_type + vm.round.to_s %>" data-toggle="tooltip" data-placement="right" title="Click to display/hide questions">toggle question list</span>
            <span class="spn_tooltip" data-toggle="tooltip" data-placement="right" title="Colors are scaled from poor to excellent in the following order: red, orange, yellow, light-green, dark-green">color legend</span>
            <span class="spn_tooltip" data-toggle="tooltip" data-placement="right" title="Click a row to see the comments for the respective question. Click 'Review Total' row to see Add'l Comments. Useful tip: decreasing your browser's zoom to 75% or 90% many improve your experience.">interaction legend</span>

          </span>

          <table id="scoresTable" class="tbl_heat tablesorter">
            <!-- display the header row of the heatgrid table. this involves iterating through reviewers.-->
            <thead>
            <tr>
              <th class="sorter-true">Criterion</th>
              <th class="sorter-false">Max</th>

              <% i = 1 %>
              <% vm.list_of_reviews.each do |review| %>
                  <!-- instructors (or higher level users) see reviewer name, students see anonymized string -->
                  <% if ['Student'].include? @current_role_name %>
                      <th class="sorter-false"> <a target="_blank" href="../response/view?id=<%= review.id.to_s %>"  data-toggle="tooltip" data-placement="right" title="Click to see details"><%= "Rev" + i.to_s %></a>  </th>
                      <% i += 1 %>
                  <% end %>
                  <% if ['Instructor', 'Teaching Assistant', 'Administrator', 'Super-Administrator'].include? @current_role_name %>
                      <% user_name = User.find(Participant.find(ResponseMap.find(Response.find(review.id).map_id).reviewer_id).user_id).fullname.to_s %>
                      <th class="sorter-false"> <a target="_blank" href="../response/view?id=<%= review.id.to_s %>"  data-toggle="tooltip" data-placement="right" title="Click to see details"><%= user_name.to_s %></a>  </th>
                      <% i += 1 %>
                  <% end %>
              <% end %>

              <th class="sorter-true" align="right" >
                Avg
              </th>
              <th class="sorter-false">
                <span  data-toggle="tooltip" data-placement="right" title="A count of comments, for the respective question, which have word count > 10. The purpose of this metric is to represent how many comments for the question are of a substantial length to provide quality feedback.">metric-1</span>
              </th>

            </tr>
            </thead>


            <% score_row_count = vm.list_of_rows.first.score_row.count %>
            <% j = 1 %>
            <!-- here, starts a series of nested loops. loops for the rows, and for the cells of the rows.-->
            <!-- additionally, there are hidden rows (expandable) which are also generated via iteration. -->
            <% vm.list_of_rows.each do |row| %>

                <!-- notice the data-target. because we're toggling via looped code, we need to dynamically generate the identifier. -->
                <tr data-toggle="collapse" class="accordion-toggle" data-target="#hid<%= row.question_id.to_s + vm.round.to_s %>">
                  <td class = 'cf' data-toggle="tooltip" title="<%= row.questionText %>"> <%= j.to_s %>   </td>
                  <td class = 'cf' > <%= row.question_max_score %>   </td>

                  <!-- actual cells with scores and colored background. -->
                  <% row.score_row.each do |score| %>
                      <td class="<%= score.color_code %> rowDataSd" align="center" data-toggle="tooltip" title="<%=score.comment%>">
                        <%= score.score_value.to_s %>
                      </td>
                  <% end %>


                  <% if row.score_row.count == 0 %>
                      <% for index in 0 .. score_row_count - 1 %>
                          <td align="center">
                            <%= "" %>
                          </td>
                      <% end %>
                  <% end %>

                  <td  class = 'cf' align="right">
                    <%= row.average_score_for_row.to_s %>
                  </td>
                  <td  class = 'cf' align="center">
                    <%= row.countofcomments.to_s %>
                  </td>
                </tr>
                <!--loop that creates the collapsed-by-default row, which lists all comments. -->
                <tr class="tablesorter-childRow">
                  <td colspan="<%= (i+1).to_s %>" class="hiddenRow" ><div id="hid<%= row.question_id.to_s + vm.round.to_s %>" class="accordion-body collapse" style="margin-left:10px;">
                    <div style="background-color:lightblue;padding:4px;"><%= row.questionText %></div>
                    <div>
                      <table class="tbl_questlist">
                        <thead>
                        <th>Score</th>
                        <th>Comment</th>
                        </thead>
                        <% for index in 0 .. row.score_row.length - 1 %>
                            <tr><td class="<%= row.score_row[index].color_code.to_s %>" align="center" ><%= row.score_row[index].score_value.to_s %></td>
                              <td><%= row.score_row[index].comment %></td></tr>
                        <% end %>
                      </table>
                    </div>
                  </div>
                  </td>
                </tr>
                <% j += 1 %>
            <% end %>

            <!--displays the row for the add'l comments, by default: collapsed. -->
            <tr>
              <td colspan="<%= (i+1).to_s %>" class="hiddenRow" >
                <div id="hid<%= vm.questionnaire_type + vm.round.to_s + "comment" %>" class="accordion-body collapse" style="margin-left:10px;">
                  <div style="background-color:#A9A9F5;padding:4px;">
                    <table class="tbl_addlcmt">
                      <thead>
                      <th>Review</th>
                      <th >Additional Comments</th>
                      </thead>
                      <tbody>
                      <%k = 1%>
                      <% vm.list_of_reviews.each do |review| %>
                          <tr><td ><%= k %></td>
                            <td ><%= Response.find(review.id)["additional_comment"] %></td></tr>
                          <%k += 1%>
                      <% end %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </td>
            </tr>

          </table>
          <!-- Display the list of team members, for Peer Reviews. -->
          <span> <%= vm.display_team_members %></span>

          <!-- this elsif terminates the heatgrid code.  -->
        <% elsif vm.questionnaire_type != "ReviewQuestionnaire" %>
            <div class="flash_error">NO REVIEW OF <%= vm.questionnaire_type %> TYPE EXISTS. </div>
        <% end %>
        <br/>   <br/>
    <% end %>
<% end %>
<!-- termination of the main outer loop. -->
